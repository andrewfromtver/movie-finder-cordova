stages:
  - build
  - test
  - deploy

build-code-job:
  stage: build
  tags:
    - build
    - docker
  script:
    - printenv
    - curl "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage?chat_id=$TELEGRAM_CHAT_ID&text=%20ðŸ› %20%5B$CI_PROJECT_NAME%5D%20Build%20job%20started%20$CI_PIPELINE_URL"
    - npm i
    - npm run build
    - doas docker build -t $CI_PROJECT_NAME .
    - curl "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage?chat_id=$TELEGRAM_CHAT_ID&text=%20âœ…%20%5B$CI_PROJECT_NAME%5D%20Build%20job%20completed%20$CI_PIPELINE_URL"

test-code-job:
  stage: test
  tags:
    - test
    - docker
  script:
    - doas docker image ls | grep "$CI_PROJECT_NAME"
    - echo "Tests ..."
    - curl "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage?chat_id=$TELEGRAM_CHAT_ID&text=%20âœ…%20%5B$CI_PROJECT_NAME%5D%20All%20tests%20passed%20successfuly%20$CI_PIPELINE_URL"

deploy-code-job:
  stage: deploy
  tags:
    - deploy
    - docker
  script:
    - doas docker-compose -v
    - doas docker stop $CI_PROJECT_NAME || true && doas docker rm $CI_PROJECT_NAME || true
    - doas docker run -d --name $CI_PROJECT_NAME -p 9080:80 $CI_PROJECT_NAME
    - curl "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage?chat_id=$TELEGRAM_CHAT_ID&text=%20ðŸš€%20%5B$CI_PROJECT_NAME%5D%20Deploy%20job%20completed%20$CI_PIPELINE_URL"
